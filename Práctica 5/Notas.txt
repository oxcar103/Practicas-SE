En el archivo excep.h se define el enum de excepciones, después en excep.c se define la tabla de manejadores como "extern volatile excep_handler_t _excep_handlers[excep_max]"
A partir de entonces, esta tabla se trata como un vector, realizándose el set y get de manejadores como "_excep_handlers[excep] = handler;" y "return _excep_handlers[excep];", respectivamente

Luego, simplemente basta en nuestro programa que definamos una función sin argumentos y que no devuelve nada con las acciones que queramos, y la convirtamos en el manejador de excepciones que más nos convenga con el set explicado antes. Para que nuestra función realice las tareas que deben realizarse cuando se produce una excepción (cambiar de modo, guardar registros, resolver excepción, cargar registros y retornar de modo) debemos cambiar su atributo "interrupt" escribiendo "__attribute__ ((interrupt (<tipo excepción>)))" antes de la cabecera de la misma. Los tipos que conoce el compilador de GNU son: "IRQ", "FIQ", "SWI", "ABORT", "UNDEF"

En nuestro caso, la excepción que escogimos fue "UNDEF" ya que podíamos forzarla mediante asm en línea y el valor "0x26889912" que no se puede descifrar como ninguna instrucción.

Para desactivar todas las interrupciones, como vimos en clase, es necesario recurrir a ensamblador en línea pues C no tiene instrucciones equivalentes a "msr" o "mrs".
Para ello, basta con unos sencillos pasos:
  - Para deshabilitarlas:
    * Guardamos "cpsr" en otro registro
    * Hacemos "cpsr" ^ 0xC0 (si los bits I, F están a 1, están deshabilitadas, y son los bits 6 y 7)
    * Guardamos el resultado en "cpsr"
    * Devolvemos el valor de la pareja (I, F) para cuando queramos volver al estado que estábamos

  - Para habilitarlas:
    * Pasamos "cpsr" a un registro (para poder operar con él)
    * Vaciamos los bits de I, F (6 y 7) con "bic reg 0xC0" o con reg v !0xC0
    * Restauramos el valor que tenía (I, F) a partir del parámetro que nos han pasado
    * Guardamos el resultado en "cpsr"

Deshabilitar sólo una es idéntico para con distintas constantes, por ejemplo, en lugar de 0xC0 se usa 0x80 para I y 0x40 para F.

NOTA IMPORTANTE:
No olvides hacer make en el directorio bsp para actualizar la librería o perderás 2 tardes de una forma muy tonta -.-
